# use C-a prefix, like in screen
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Respond to escape faster
set -s escape-time 5

# I have a colorful terminal
set -g default-terminal "screen-256color"

# I hate bells
set -g bell-action none

# Count from 1? What!? 0 is just on the wrong side of the keyboard
set -g base-index 1

# Longer message times
set -g display-time 2000

# More history
set -g history-limit 100000

# I like main-horizontal, but want it wider
setw -g main-pane-width 150

# Visual refresh with r
unbind r
bind r select-layout

# Config refresh with R
bind R source-file ~/.tmux.conf

# Window handling
bind C command-prompt -p "New window command" "new-window '%%'"
# Create new pane with existing window
bind @ command-prompt -p "create pane from:" "join-pane -s ':%%'"

# Let me use the mouse
# set -g mouse-select-pane on
# set -g mouse-select-window on
# set -g mouse-resize-pane on
# setw -g mode-mouse copy-mode

# Use vim motion keys while in copy mode
setw -g mode-keys vi
bind -t vi-choice C-d page-down
bind -t vi-choice C-u page-up
bind -t vi-copy C-u page-up
bind -t vi-copy C-d page-down
bind -t vi-copy C-e scroll-down
bind -t vi-copy C-y scroll-up

# Vim key bindings for command entry
set -g status-keys vi
bind -t vi-edit Up history-up
bind -t vi-edit Down history-down
bind -t vi-edit Left cursor-left
bind -t vi-edit Right cursor-right

# Use "v" and "s" to do vertical/horizontal splits, like vim
unbind %
unbind '"'
bind s split-window -v
bind S command-prompt -p "New pane command:" "split-window -v '%%'"
bind v split-window -h
bind V command-prompt -p "New pane command:" "split-window -h '%%'"

# Use the vim motion keys to move between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Capital vim motion keys swap panes
# Unfortunately pane swapping isn't directional, so this is approximate
bind J swap-pane -D
bind K swap-pane -U

# Use the vim resize keys
bind -r < resize-pane -L 5
bind -r > resize-pane -R 5
bind -r - resize-pane -D 5
bind -r + resize-pane -U 5
setw -g aggressive-resize on

# Better status bar
set -g status-bg black
set -g status-fg white
set -g status-justify centre
setw -g window-status-current-bg red

set -g status-left-length 40
set -g status-left '#S:#W.#P'
set -g status-left-fg green

set -g status-right '%H:%M %d-%b-%y'
set -g status-right-fg magenta

# Show '<session>@<host>' in terminal title
set -g set-titles on
set -g set-titles-string '#S@#h'

# C-c: save into system clipboard (+). With preselection.
bind C-c choose-buffer "run \"tmux save-buffer -b %% - | xclip -i -sel clipboard\" \; run \" tmux display \\\"Clipboard \(+\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-v: copy from + clipboard.
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(+\) $(xclip -o -sel clipboard | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

# C-d: save into selection clipboard (*). With preselection.
bind C-d choose-buffer "run \"tmux save-buffer -b %% - | xclip -i\" \; run \" tmux display \\\"Clipboard \(*\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-f: copy from * clipboard.
bind C-f run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(*\) $(xclip -o | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""â‡§

source-file ~/.local_config/tmux.conf
